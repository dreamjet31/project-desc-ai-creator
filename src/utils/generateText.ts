import OpenAI from "openai";

const openaiApiKey: string | undefined = process.env.NEXT_PUBLIC_OPENAI_API_KEY;

const openaiAPI = new OpenAI({ apiKey: openaiApiKey, dangerouslyAllowBrowser: true });

/**
 * The `generateText` function takes a prompt as input and uses the OpenAI GPT-3.5-turbo model to
 * generate a completion based on the prompt.
 * @param {string} prompt - The `prompt` parameter is a string that represents the initial message or
 * prompt for the chat conversation. It is the message that will be sent to the OpenAI API to generate
 * a response.
 * @returns The function `generateText` returns the content of the message generated by the OpenAI chat
 * completion.
 */
export const generateText = async (prompt:string) => {
  const completion = await openaiAPI.chat.completions.create({
    messages: [
      {
        role: "system",
        content: prompt,
      }
    ],
    model: "gpt-3.5-turbo",
    // response_format: {
    //   type: 'json_object' // Set the response format to return as a JSON object
    // },
  });
  return completion.choices[0].message.content;
}